/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.raven.form;

import Model.Duty;
import Model.Place;
import Model.Request;
import Model.RequestType;
import Model.StatusType;
import Model.User;
import Utils.RequestDAO;
import Utils.UserDAO;
import Utils.User_Manager;
import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.Month;
import java.time.temporal.ChronoUnit;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus
 */
public class Edit_request extends javax.swing.JFrame {

    private User user;
    private Request request;

    public Request getRequest() {
        return request;
    }

    /**
     * Creates new form Edit_request
     */
    public void setValue(User user, Request request) {
        this.user = user;
        this.request = request;
        this.staff_Name.setText(user.getName());
        this.reason_TF.setText(request.getReason());
        this.requestType_TF.setText(request.getRequest().toString());
        this.id_TF.setText(this.user.getID());

    }

    public Edit_request() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.reason_TF.setEditable(false);
        this.staff_Name.setEditable(false);
        this.reason_TF.setEditable(false);
        this.requestType_TF.setEditable(false);
        this.setTitle("CHECKING REQUEST");
        this.id_TF.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        reason_label = new javax.swing.JLabel();
        reason_TF = new javax.swing.JTextField();
        requestType_label = new javax.swing.JLabel();
        requestType_TF = new javax.swing.JTextField();
        approve_checkbox = new javax.swing.JCheckBox();
        decline_checkbox = new javax.swing.JCheckBox();
        apply_button = new javax.swing.JButton();
        close_button = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        id_TF = new javax.swing.JTextField();
        staff_Name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(550, 350));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/id.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 51, -1, 73));

        reason_label.setText("Reason");
        getContentPane().add(reason_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        reason_TF.setBackground(new java.awt.Color(255, 255, 255));
        reason_TF.setForeground(new java.awt.Color(0, 0, 51));
        getContentPane().add(reason_TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 200, 80));

        requestType_label.setText("Request Type");
        getContentPane().add(requestType_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, -1, -1));

        requestType_TF.setBackground(new java.awt.Color(255, 255, 255));
        requestType_TF.setForeground(new java.awt.Color(0, 0, 51));
        getContentPane().add(requestType_TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, 190, 30));

        buttonGroup1.add(approve_checkbox);
        approve_checkbox.setForeground(new java.awt.Color(255, 255, 255));
        approve_checkbox.setText("APPROVE");
        getContentPane().add(approve_checkbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, -1, -1));

        buttonGroup1.add(decline_checkbox);
        decline_checkbox.setForeground(new java.awt.Color(255, 255, 255));
        decline_checkbox.setText("DECLINE");
        getContentPane().add(decline_checkbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, -1, -1));

        apply_button.setBackground(new java.awt.Color(0, 0, 51));
        apply_button.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        apply_button.setForeground(new java.awt.Color(255, 255, 255));
        apply_button.setText("APPLY");
        apply_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apply_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(apply_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, -1, -1));

        close_button.setBackground(new java.awt.Color(0, 153, 153));
        close_button.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        close_button.setForeground(new java.awt.Color(0, 0, 0));
        close_button.setText("CLOSE");
        close_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(close_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        id_TF.setBackground(new java.awt.Color(0, 0, 51));
        id_TF.setForeground(new java.awt.Color(255, 255, 255));
        id_TF.setBorder(null);
        jPanel2.add(id_TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 260, -1));

        staff_Name.setBackground(new java.awt.Color(0, 0, 51));
        staff_Name.setForeground(new java.awt.Color(255, 255, 255));
        staff_Name.setBorder(null);
        staff_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staff_NameActionPerformed(evt);
            }
        });
        jPanel2.add(staff_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 140, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CHECKING REQUEST");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void apply_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apply_buttonActionPerformed
        // TODO add your handling code here:
        if (this.approve_checkbox.isSelected()) {
            this.request.setStatus(StatusType.APPROVED);
            List<Duty> userDutyist = UserDAO.readDutyList().get(this.user.getID());
            if (request.getDateFrom().isAfter(request.getDateTo())) {
                JOptionPane.showMessageDialog(null, "This request should be rejected because it has wrong format of date", "Announce", JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "This request is perfect", "Announce", JOptionPane.PLAIN_MESSAGE);

            }
            if (this.request.getRequest() == RequestType.LEAVE) {
                long daysBetween = ChronoUnit.DAYS.between(request.getDateFrom(), request.getDateTo());
                System.out.println(daysBetween + " dayBetween");
                int run = 0;
                for (int F = 0; F <= userDutyist.size(); F++) {
                    if (run <= daysBetween) {
                        System.out.println("dang so sanh");

                        if (userDutyist.get(F).getDate().equals(request.getDateFrom().plusDays(run))) {
                            System.out.println("trung ngay " + userDutyist.get(F).getDate().plusDays(run));
                            userDutyist.get(F).setPlace(Place.LEAVE);
                            userDutyist.get(F).setStartTime(LocalTime.of(0, 0));
                            userDutyist.get(F).setEndTime(LocalTime.of(0, 0));
                            run++;
                        } 
                    } else if (run > daysBetween) {
                        Map<String, List<Duty>> mapDuty = UserDAO.readDutyList();
                        mapDuty.put(this.user.getID(), userDutyist);
                        UserDAO.saveDutyListAsChar(mapDuty);

                        break;
                    }

                }
            }
        } else {
            this.request.setStatus(StatusType.REJECTED);
        }

        Map<String, List<Request>> mapRequest = RequestDAO.readRequestListAsChar();
        List<Request> userRequestList = mapRequest.get(this.user.getID());
        for (Request currentRequest : userRequestList) {
            if (currentRequest.getDateFrom().equals(this.request.getDateFrom()) && currentRequest.getDateTo().equals(currentRequest.getDateTo()) && currentRequest.getRequest() == this.request.getRequest() && currentRequest.getReason().equals(this.request.getReason())) {
                currentRequest.setStatus(this.request.getStatus());
                try {
                    RequestDAO.saveRequestListAsChar(mapRequest);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Edit_request.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            }
        }
    }//GEN-LAST:event_apply_buttonActionPerformed

    private void close_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_buttonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_close_buttonActionPerformed

    private void staff_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staff_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staff_NameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edit_request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edit_request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edit_request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edit_request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edit_request().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apply_button;
    private javax.swing.JCheckBox approve_checkbox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton close_button;
    private javax.swing.JCheckBox decline_checkbox;
    private javax.swing.JTextField id_TF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField reason_TF;
    private javax.swing.JLabel reason_label;
    private javax.swing.JTextField requestType_TF;
    private javax.swing.JLabel requestType_label;
    private javax.swing.JTextField staff_Name;
    // End of variables declaration//GEN-END:variables
}

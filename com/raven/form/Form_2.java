/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import Model.Request;
import Model.User;
import Utils.RequestDAO;
import Utils.User_Manager;
import View.ViewRequest;
import com.raven.model.StatusType;
import java.awt.Color;
import java.util.List;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author RAVEN
 */
public class Form_2 extends javax.swing.JPanel {

    /**
     * Creates new form Form_1
     */
    public Form_2() {
        initComponents();
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        List<User> listStaff = User_Manager.getListStaff();
        Map<String, List<Request>> mapRequest = RequestDAO.readRequestListAsChar();
        for (User user : listStaff) {
            int countPending = 0;
            List<Request> requestList = mapRequest.get(user.getID());
            for (Request request : requestList) {
                if(request.getStatus() == Model.StatusType.PENDING){
                    countPending++;
                }
            }
            table.addRow(new Object[]{user.getID(), user.getName(),countPending });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        spTable = new javax.swing.JScrollPane();
        table = new com.raven.swing.Table();
        jLabel2 = new javax.swing.JLabel();
        searchRequest_TF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(242, 242, 242));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("REQUEST MANAGEMENT ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, -1, -1));

        spTable.setBorder(null);

        table.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 204, 204), null, null));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Number of pending request"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setGridColor(new java.awt.Color(204, 204, 204));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        spTable.setViewportView(table);

        add(spTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 920, 420));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/patient.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        searchRequest_TF.setBackground(new java.awt.Color(255, 255, 255));
        searchRequest_TF.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        searchRequest_TF.setForeground(new java.awt.Color(0, 0, 51));
        searchRequest_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchRequest_TFKeyReleased(evt);
            }
        });
        add(searchRequest_TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, 250, 30));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 51));
        jLabel3.setText("Seach :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int selectedRow = table.getSelectedRow();
            Object cellValue = table.getValueAt(selectedRow, 0); // Assuming the first column index is 0
            if (cellValue != null) {
                ViewRequest editFrame = new ViewRequest();
                editFrame.setValue(cellValue.toString());
                editFrame.setVisible(true);
            }
        }
    }//GEN-LAST:event_tableMouseClicked

    private void searchRequest_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchRequest_TFKeyReleased
        // TODO add your handling code here:
//         BookTableModel obj = (BookTableModel) bookTable.getModel();
//        TableRowSorter<BookTableModel> tableRowSort = new TableRowSorter<>(obj);
//        bookTable.setRowSorter(tableRowSort);BookTableModel
//        tableRowSort.setRowFilter(RowFilter.regexFilter(searchBook_TF.getText()));

        String searchText = searchRequest_TF.getText().toLowerCase();

        // Create a TableRowSorter and set it on the table
        TableRowSorter<javax.swing.table.DefaultTableModel> sorter = new TableRowSorter<>(
                (javax.swing.table.DefaultTableModel) table.getModel());
        table.setRowSorter(sorter);

        // Set the row filter based on the search text
        RowFilter<javax.swing.table.DefaultTableModel, Object> filter = RowFilter.regexFilter("(?i)" + searchText, 0, 1, 2, 3);
        sorter.setRowFilter(filter);
    }//GEN-LAST:event_searchRequest_TFKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField searchRequest_TF;
    private javax.swing.JScrollPane spTable;
    private com.raven.swing.Table table;
    // End of variables declaration//GEN-END:variables
}
